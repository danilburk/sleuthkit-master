/*! \page mod_example_page Example Modules

This page provides some examples of how you might implement some modules. As outlined in the \ref pipe_types, modules can be written in either a File Analysis pipeline or a Reporting pipeline.  The main difference is how often and when they are run.  File analysis modules are run on each individual file and reporting modules are run once after all files have been analyzed.  In general, if your analysis module will only run on a very small set of files, then it is more effecient to run it as a reporting module. If it will run on every module, then it should be a file analysis module. 

\section mod_ex_hash MD5 Hash Module
It is common to calculate the MD5 hash for each file in an image to detect known files and detect duplicate files.  Because we want to calculate the hash of each file, it should be run as a file analysis module.

NOTE: The source code for an MD5 hash module is included with the framework. 

Many libraries for calculating MD5 hash sums do not have a setup or cleanup stage, so we can have empty <tt>initialize()</tt> and <tt>finalize()</tt> methods.

The <tt>run()</tt> method would have code that would read the contents of the file using TskFile.read() and push it into the MD5 library.  The final MD5 value would be posted to the Blackboard for the file using the name TskBlackboard.TSK_MD5. 

\section mod_ex_hashlook MD5 Hash Lookup Module
It is also common to lookup MD5 hash values in databases. Because this will be done on all files, it should be implemented as a file analysis module.  This section covers an example module that does this.

NOTE: The source code for an MD5 hash lookup module that uses the TSK hash database support is included with the framework.

The lookup process will likely need access to a database, so that should be opened in the <tt>initialize()</tt> method. The <tt>finalize()</tt> method should close the connection. 

The <tt>run()</tt> method will be called on each file.  It should lookup the TskBlackboard.TSK_MD5 value from the blackboard for the given file using TskFile.getBlackBoard(). It will then look that value up in the hash database. 

<!-- UPDATE WHAT TO DO WITH THE VALUE 
Add that they can stop processing...
-->

\section mod_registry Registry Analysis Module
It would be common for a system to have a module that reads registry data. Because there are only a few registry hives on a Windows system, it should probably be implemented as a reporting module. 

The <tt>initialize()</tt> and <tt>finalize()</tt> methods should do whatever is needed for the registry libraries. The <tt>report()</tt> method should perform database queries using TskImgDB.getFileIds().  That will return a list of file ids, that can be converted to TskFile objects using TskFileManager.getFile(). 

The results of the registry analysis can then be posted to the blackboard.  See the blackboard section for more details how these results can be posted. 

<!-- EXAMPLES TO ADD:
 * ZIP File extraction
 * 
--> 
*/
